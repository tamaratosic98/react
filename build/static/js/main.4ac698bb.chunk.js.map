{"version":3,"sources":["components/Button.js","components/Header.js","components/Exam.js","components/Exams.js","components/AddExam.js","components/Footer.js","components/Info.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","onClick","className","defaultProps","color","Header","title","onAdd","showAdd","location","useLocation","pathname","Exam","exam","onDelete","onToggle","reminder","onDoubleClick","id","style","cursor","day","Exams","exams","map","AddExam","useState","setText","setDay","espb","setEspb","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","Info","App","showAddExam","setShowAddExam","setExams","addExam","Math","floor","random","newExam","deleteExam","filter","task","toggleReminder","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ac698bb.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nconst Button = ({text, onClick}) => {\n    return (\n        <button onClick={onClick} className='btn'>\n            {text}\n        </button>\n    )\n}\nButton.defaultProps={\n    color:'red'\n}\nButton.propTypes={\n    text: PropTypes.string,\n    onClick:PropTypes.func,\n}\nexport default Button\n","//import React from 'react'\nimport PropTypes from 'prop-types'//impt precica\nimport Button from './Button'\nimport {useLocation} from 'react-router-dom'\n//look at the route that we're currently on\nconst Header = ({title, onAdd, showAdd}) => {\n    // const onClick=()=>{\n    //     console.log('click')\n    // }\n    //moze da pise i props bez zagrada\n    const location=useLocation()\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            {location.pathname==='/' && (\n                <Button text={showAdd?'Close':'Add'} onClick={onAdd}/>\n            )}\n        </header>\n    )\n}\nHeader.defaultProps={\n    title: 'Exam Planer'\n    //ovo je default, kada bismo mu prosledili sa neke druge strane\n    //onda bi se prikazalo nesto drugo\n}\nHeader.propTypes={\n    title: PropTypes.string.isRequired,\n}\n// const headingStyle ={\n//     color: 'red',\n//     backgroundColor: 'black',\n// }\nexport default Header\n//rafce precica i enter\n//kada prosledjujemo broj ide u {broj}","import React from 'react'\nimport {FaTimes} from 'react-icons/fa'//font awesome\nconst Exam = ({exam, onDelete, onToggle}) => {\n    return (\n        <div className={`exam ${exam.reminder ?  'reminder' :''}`}\n             onDoubleClick={()=>onToggle(exam.id)}>\n            <h3>{exam.text}\n                <FaTimes style={{cursor:'pointer'}} \n                         onClick={()=>onDelete(exam.id)}\n                />\n            </h3>\n            <p>{exam.day}</p>\n        </div>\n    )\n}\n\nexport default Exam\n\n\n","\nimport Exam from './Exam'\nconst Exams = ({ exams, onDelete, onToggle }) => {\n    \n    return (\n        <>\n            {exams.map((exam)=>(\n                <Exam key={exam.id} \n                      exam={exam} \n                      onDelete={onDelete}\n                      onToggle={onToggle}/>\n            ))}\n        </>\n    )\n}\n\nexport default Exams\n","\nimport {useState} from 'react'\nconst AddExam = ({onAdd}) => {\n    const [text, setText]=useState('');\n    const [day, setDay]=useState('');\n    const [espb, setEspb]=useState('');\n    const [reminder, setReminder]=useState(false);\n    const onSubmit=(e)=>{\n        e.preventDefault()//da ne submituje na stranicu\n        //e je event objekat\n        if(!text){\n            alert('Please add the name of your exam.')\n            return\n        }\n        onAdd({text,day,reminder,espb})\n        setText('')\n        setDay('')\n        setEspb('')\n        setReminder(false)\n    }\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Exam</label>\n                <input type=\"text\" placeholder='Add Exam' \n                       value={text}\n                       onChange={(e)=>{setText(e.target.value)}}\n                />\n            </div>\n            <div className='form-control'>\n                <label>Day of the Exam</label>\n                <input type=\"text\" placeholder='Add Day'\n                    value={day}\n                    onChange={(e)=>{setDay(e.target.value)}}\n                />\n            </div>\n            <div className='form-control'>\n                <label>ESPB</label>\n                <input type=\"text\" placeholder='Add ESPB points'\n                    value={espb}\n                    onChange={(e)=>{setEspb(e.target.value)}}\n                />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Reminder</label>\n                <input type='checkbox'\n                    checked={reminder}\n                    value={reminder}\n                    onChange={(e)=>{setReminder(e.currentTarget.checked)}}\n                />\n            </div>\n\n            <input type=\"submit\" value='Save Exam' className='btn btn-block'/>\n        </form>\n    )\n}\n\nexport default AddExam\n","import {Link} from 'react-router-dom'\nconst Footer = () => {\n    return (\n        <footer>\n            <p>Copyright Tamara Tosic &copy; 2021</p>\n            <Link to='/info'>Faculty information</Link>\n        </footer>\n    )\n}\n\nexport default Footer\n","import {Link} from 'react-router-dom'//da se ne refresh-uje\nconst Info = () => {\n    return (\n        <div>\n            <h3>Faculty of Organizational Sciences</h3>\n            <small>Jove IliÄ‡a 154, 11000 Belgrade, Serbia</small>\n            <p>The Faculty of Organizational Sciences (FOS) was founded in 1969 \n                at the request of a large number of enterprises, with the aim to \n                strengthen the economy by the precious latest knowledge in the field \n                of organization, management and information systems. \n                The Council of the University of Belgrade, at its meeting held on 28 \n                November 1970, reached decision to include the Faculty of Organizational \n                Sciences in the frame of the University of Belgrade. The Faculty of \n                Organizational Sciences in Belgrade (FOS) was officially opened on 4 November 1971, \n                and on 8 November of the same year it started teaching the first generation of students \n                enrolled in the first and third year.</p>\n            <Link to='/'>Go back to your exams</Link>\n        </div>\n    )\n}\n\nexport default Info\n","//import logo from './logo.svg';//spinning react logo\n//import './App.css';\nimport Header from './components/Header'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Exams from './components/Exams'\nimport { useState } from 'react'\nimport AddExam from './components/AddExam'\nimport Footer from './components/Footer'\nimport Info from './components/Info'\n\nfunction App() {\n  const [showAddExam, setShowAddExam]=useState(false)//da se ne prikazuje forma\n  //nego kad se klikne na Add dugme\n  //const name='Tamara'\n  //const x=false\n  const [exams, setExams]=useState(\n    [\n        {\n            id:1,\n            text:'Java Programming',\n            espb:6,\n            day: 'Feb 14th at 2:30pm',\n            reminder: true,\n        },\n        {\n            id:2,\n            text:'Statistics',\n            espb:4,\n            day: 'Feb 23th at 3:30pm',\n            reminder: true,\n        },\n        {\n            id:3,\n            text:'Science',\n            espb:5,\n            day: 'Feb 28th at 4:30pm',\n            reminder: false,\n        }\n    ])\n//Add exam\nconst addExam=(exam)=>{\n  //console.log(exam);\n  const id=Math.floor(Math.random()*10000)+1//random number\n  //floor radi zaokruzivanje\n  const newExam={id,...exam}\n  setExams([...exams,newExam])\n}\n//Delete exam \nconst deleteExam=(id)=>{\n  //console.log('delete',id);\n  setExams(exams.filter((task)=>task.id!==id))\n  //prikazujemo sve osim tog koji zelimo da obrisemo\n}\n//Toggle Reminder\nconst toggleReminder=(id)=>{\n  // console.log(id);\n  setExams(exams.map(\n    (exam)=>exam.id===id ? \n      {...exam, reminder:!exam.reminder}\n      :exam\n    ))\n}\n  return (\n    <Router>\n    <div className=\"container\">\n      <Header onAdd={()=> setShowAddExam(!showAddExam)} \n      showAdd={showAddExam} />\n      \n      <Route \n          path='/' \n          exact \n          render={(props)=>(\n            <>\n            {showAddExam && <AddExam onAdd=\n            {addExam}/>}\n            {exams.length > 0 ? (\n            <Exams  \n                  exams={exams} \n                  onDelete={deleteExam} \n                  onToggle={toggleReminder}\n            />):\n            (<h3>No Exams to show</h3>)\n            }\n          </>\n        )}/>\n      <Route path='/info' component={Info}/>\n      <Footer />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';//APP JE ROOT KOMPONENTA\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}